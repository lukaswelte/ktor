
sourceSets {
    main {
        kotlin.srcDir 'src'
        component {
            targets = ['ios_arm64', 'ios_x64', 'macos_x64']
            outputKinds = [KLIBRARY]
            extraOpts '-Xuse-experimental', 'io.ktor.util.KtorExperimentalAPI,io.ktor.util.InternalAPI'
        }
    }
    test {
        kotlin.srcDir 'test'
        component {
            targets = ['ios_arm64', 'ios_x64', 'macos_x64']
            extraOpts '-Xuse-experimental', 'io.ktor.util.KtorExperimentalAPI,io.ktor.util.InternalAPI'
        }
    }
}

dependencies {
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-native', version: coroutines_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-io-native', version: kotlinx_io_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io-native', version: kotlinx_io_version
}

if (project.hasProperty("teamcity")) {
    afterEvaluate {
        tasks.withType(Class.forName("org.gradle.nativeplatform.test.tasks.RunTestExecutable")) {
            args '--ktest_logger=TEAMCITY'
        }
    }
}
